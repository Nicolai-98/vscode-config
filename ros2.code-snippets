{
    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
    // Placeholders with the same ids are connected.
    "Python ros2 boilerplate": {
        "scope": "python",
        "prefix": "pynodetpl",
        "body": [
            "#!/usr/bin/env python3",
            "import rclpy",
            "from rclpy.node import Node",
            "",
            "class MyCustomNode(Node): # Todo EDIT",
            "    def __init__(self):",
            "        super().__init__(\"node_name\") # Todo EDIT",
            "",
            "def main(args=None):",
            "    rclpy.init(args=args)",
            "    node = MyCustomNode() # Todo EDIT",
            "    rclpy.spin(node)",
            "    rclpy.shutdown()",
            "",
            "if __name__ == \"__main__\":",
            "    main()"
        ],
        "description": "Standard template for a ros2 python node"
    },
    "C++ ros2 boilerplate": {
        "scope": "cpp",
        "prefix": "cppnodetpl",
        "body": [
            "#include \"rclcpp/rclcpp.hpp\"",
            "",
            "class MyCustomNode : public rclcpp::Node { // Todo EDIT",
            "public:",
            "    MyCustomNode() : Node(\"node_name\") { // Todo EDIT",
            "        // Constructor implementation",
            "    }",
            "};",
            "",
            "int main(int argc, char * argv[]) {",
            "    rclcpp::init(argc, argv);",
            "    auto node = std::make_shared<MyCustomNode>(); // Todo EDIT",
            "    rclcpp::spin(node);",
            "    rclcpp::shutdown();",
            "    return 0;",
            "}"
        ],
        "description": "Standard template for a ros2 C++ node"
    }
}